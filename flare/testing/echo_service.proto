// Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
//
// Licensed under the BSD 3-Clause License (the "License"); you may not use this
// file except in compliance with the License. You may obtain a copy of the
// License at
//
// https://opensource.org/licenses/BSD-3-Clause
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

syntax = "proto3";

package flare.testing;

import "flare/rpc/rpc_options.proto";

option cc_generic_services = true;

message EchoRequest {
  string body = 1;
  string never_used_body = 2;
}

message EchoResponse {
  string body = 2;
}

service EchoService {
  option (flare.qzone_service_id) = 2;
  rpc Echo(EchoRequest) returns (EchoResponse) {
    option (flare.qzone_method_id) = 1001;
  }
  rpc EchoWithMaxQueueingDelay(EchoRequest) returns (EchoResponse) {
    option (flare.qzone_method_id) = 1005;
    option (flare.max_queueing_delay_ms) = 1;  // In milliseconds.
  }
  rpc EchoWithMaxOngoingRequests(EchoRequest) returns (EchoResponse) {
    option (flare.max_ongoing_requests) = 1;
  }
  rpc EchoStreamRequest(stream EchoRequest) returns (EchoResponse) {
    option (flare.qzone_method_id) = 1003;
  }
  rpc EchoStreamResponse(EchoRequest) returns (stream EchoResponse) {
    option (flare.qzone_method_id) = 1002;
  }
  rpc EchoStreamBoth(stream EchoRequest) returns (stream EchoResponse) {
    option (flare.qzone_method_id) = 1004;
  }
}
